{"ast":null,"code":"var _jsxFileName = \"/home/marcos/www/challenge/src/components/Chart/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveContainer, ComposedChart, Line, Bar, XAxis, YAxis, LabelList } from 'recharts';\nimport { Container } from './styles';\nimport { formatForecast } from '../../utils';\nexport default function Chart({\n  data\n}) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: '100%',\n    height: 330,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    stroke: \"#c4c4c4\",\n    strokeWidth: 0.4,\n    tickLine: false,\n    tick: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    yAxisId: \"humidity\",\n    dataKey: \"humidity\",\n    hide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    padding: {\n      top: 25,\n      bottom: 25,\n      left: 100\n    },\n    yAxisId: \"temperature\",\n    tickFormatter: value => \"\".concat(formatForecast(value, 'ºC')),\n    stroke: \"#c4c4c4\",\n    strokeWidth: 0.4,\n    tick: {\n      fontFamily: 'Roboto, sans-serif',\n      fontSize: 11,\n      stroke: '#666'\n    },\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"humidity\",\n    barSize: 40,\n    fill: \"#3FA2F7\",\n    radius: [6, 6, 0, 0],\n    yAxisId: \"humidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LabelList, {\n    dataKey: \"humidity\",\n    position: \"insideBottom\",\n    fill: \"#fff\",\n    fontFamily: \"Roboto, sans-serif\",\n    fontSize: 9,\n    formatter: value => \"\".concat(formatForecast(value, '%')),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Line, {\n    yAxisId: \"temperature\",\n    type: \"linear\",\n    dataKey: \"max\",\n    stroke: \"#E86C60\",\n    strokeWidth: 3,\n    dot: {\n      r: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Line, {\n    yAxisId: \"temperature\",\n    type: \"linear\",\n    dataKey: \"min\",\n    stroke: \"#59EBFF\",\n    strokeWidth: 3,\n    dot: {\n      r: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n}\nChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    min: PropTypes.number,\n    max: PropTypes.number,\n    humidity: PropTypes.number\n  })).isRequired\n};","map":{"version":3,"sources":["/home/marcos/www/challenge/src/components/Chart/index.js"],"names":["React","PropTypes","ResponsiveContainer","ComposedChart","Line","Bar","XAxis","YAxis","LabelList","Container","formatForecast","Chart","data","top","bottom","left","value","fontFamily","fontSize","stroke","r","propTypes","arrayOf","shape","min","number","max","humidity","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  LabelList\n} from 'recharts'\n\nimport { Container } from './styles'\nimport { formatForecast } from '../../utils'\n\nexport default function Chart ({ data }) {\n  return (\n    <Container>\n      <ResponsiveContainer width={'100%'} height={330}>\n        <ComposedChart data={data}>\n          <XAxis\n            stroke='#c4c4c4'\n            strokeWidth={0.4}\n            tickLine={false}\n            tick={false}\n          />\n\n          <YAxis yAxisId='humidity' dataKey='humidity' hide />\n\n          <YAxis\n            padding={{ top: 25, bottom: 25, left: 100 }}\n            yAxisId='temperature'\n            tickFormatter={value => `${formatForecast(value, 'ºC')}`}\n            stroke='#c4c4c4'\n            strokeWidth={0.4}\n            tick={{\n              fontFamily: 'Roboto, sans-serif',\n              fontSize: 11,\n              stroke: '#666'\n            }}\n            tickLine={false}\n          />\n\n          <Bar\n            dataKey='humidity'\n            barSize={40}\n            fill='#3FA2F7'\n            radius={[6, 6, 0, 0]}\n            yAxisId='humidity'\n          >\n            <LabelList\n              dataKey='humidity'\n              position='insideBottom'\n              fill='#fff'\n              fontFamily='Roboto, sans-serif'\n              fontSize={9}\n              formatter={value => `${formatForecast(value, '%')}`}\n            />\n          </Bar>\n\n          <Line\n            yAxisId='temperature'\n            type='linear'\n            dataKey='max'\n            stroke='#E86C60'\n            strokeWidth={3}\n            dot={{ r: 6 }}\n          />\n\n          <Line\n            yAxisId='temperature'\n            type='linear'\n            dataKey='min'\n            stroke='#59EBFF'\n            strokeWidth={3}\n            dot={{ r: 6 }}\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </Container>\n  )\n}\n\nChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      humidity: PropTypes.number\n    })\n  ).isRequired\n}\n"]},"metadata":{},"sourceType":"module"}