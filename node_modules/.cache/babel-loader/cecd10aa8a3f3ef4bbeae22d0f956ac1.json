{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nimport _isFunction from \"lodash/isFunction\";\n\nvar _class, _class2, _temp;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/**\n * @fileOverview Radar\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animate from 'react-smooth';\nimport classNames from 'classnames';\nimport { interpolateNumber } from '../util/DataUtils';\nimport pureRender from '../util/PureRender';\nimport { PRESENTATION_ATTRIBUTES, LEGEND_TYPES, TOOLTIP_TYPES, filterEventAttributes, getPresentationAttributes, isSsr } from '../util/ReactUtils';\nimport { polarToCartesian } from '../util/PolarUtils';\nimport { getValueByDataKey } from '../util/ChartUtils';\nimport Polygon from '../shape/Polygon';\nimport Dot from '../shape/Dot';\nimport Layer from '../container/Layer';\nimport LabelList from '../component/LabelList';\n\nvar Radar = pureRender(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Radar, _Component);\n\n  function Radar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Radar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Radar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isAnimationFinished: false\n    };\n\n    _this.cachePrevData = function (points) {\n      _this.setState({\n        prevPoints: points\n      });\n    };\n\n    _this.handleAnimationEnd = function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n    };\n\n    _this.handleAnimationStart = function () {\n      _this.setState({\n        isAnimationFinished: false\n      });\n    };\n\n    _this.handleMouseEnter = function (e) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter(_this.props, e);\n      }\n    };\n\n    _this.handleMouseLeave = function (e) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave(_this.props, e);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Radar, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          animationId = _this$props.animationId,\n          points = _this$props.points;\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(points);\n      }\n    }\n  }, {\n    key: \"renderDots\",\n    value: function renderDots(points) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          dot = _this$props2.dot,\n          dataKey = _this$props2.dataKey;\n      var baseProps = getPresentationAttributes(this.props);\n      var customDotProps = getPresentationAttributes(dot);\n      var dots = points.map(function (entry, i) {\n        var dotProps = _objectSpread({\n          key: \"dot-\".concat(i),\n          r: 3\n        }, baseProps, customDotProps, {\n          dataKey: dataKey,\n          cx: entry.x,\n          cy: entry.y,\n          index: i,\n          payload: entry\n        });\n\n        return _this2.constructor.renderDotItem(dot, dotProps);\n      });\n      return React.createElement(Layer, {\n        className: \"recharts-radar-dots\"\n      }, dots);\n    }\n  }, {\n    key: \"renderPolygonStatically\",\n    value: function renderPolygonStatically(points) {\n      var _this$props3 = this.props,\n          shape = _this$props3.shape,\n          dot = _this$props3.dot;\n      var radar;\n\n      if (React.isValidElement(shape)) {\n        radar = React.cloneElement(shape, _objectSpread({}, this.props, {\n          points: points\n        }));\n      } else if (_isFunction(shape)) {\n        radar = shape(_objectSpread({}, this.props, {\n          points: points\n        }));\n      } else {\n        radar = React.createElement(Polygon, _extends({}, filterEventAttributes(this.props), {\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave\n        }, getPresentationAttributes(this.props), {\n          points: points\n        }));\n      }\n\n      return React.createElement(Layer, {\n        className: \"recharts-radar-polygon\"\n      }, radar, dot ? this.renderDots(points) : null);\n    }\n  }, {\n    key: \"renderPolygonWithAnimation\",\n    value: function renderPolygonWithAnimation() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          points = _this$props4.points,\n          isAnimationActive = _this$props4.isAnimationActive,\n          animationBegin = _this$props4.animationBegin,\n          animationDuration = _this$props4.animationDuration,\n          animationEasing = _this$props4.animationEasing,\n          animationId = _this$props4.animationId;\n      var prevPoints = this.state.prevPoints;\n      return React.createElement(Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n          t: 0\n        },\n        to: {\n          t: 1\n        },\n        key: \"radar-\".concat(animationId),\n        onAnimationEnd: this.handleAnimationEnd,\n        onAnimationStart: this.handleAnimationStart\n      }, function (_ref) {\n        var t = _ref.t;\n        var prevPointsDiffFactor = prevPoints && prevPoints.length / points.length;\n        var stepData = points.map(function (entry, index) {\n          var prev = prevPoints && prevPoints[Math.floor(index * prevPointsDiffFactor)];\n\n          if (prev) {\n            var _interpolatorX = interpolateNumber(prev.x, entry.x);\n\n            var _interpolatorY = interpolateNumber(prev.y, entry.y);\n\n            return _objectSpread({}, entry, {\n              x: _interpolatorX(t),\n              y: _interpolatorY(t)\n            });\n          }\n\n          var interpolatorX = interpolateNumber(entry.cx, entry.x);\n          var interpolatorY = interpolateNumber(entry.cy, entry.y);\n          return _objectSpread({}, entry, {\n            x: interpolatorX(t),\n            y: interpolatorY(t)\n          });\n        });\n        return _this3.renderPolygonStatically(stepData);\n      });\n    }\n  }, {\n    key: \"renderPolygon\",\n    value: function renderPolygon() {\n      var _this$props5 = this.props,\n          points = _this$props5.points,\n          isAnimationActive = _this$props5.isAnimationActive;\n      var prevPoints = this.state.prevPoints;\n\n      if (isAnimationActive && points && points.length && (!prevPoints || !_isEqual(prevPoints, points))) {\n        return this.renderPolygonWithAnimation();\n      }\n\n      return this.renderPolygonStatically(points);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          hide = _this$props6.hide,\n          className = _this$props6.className,\n          points = _this$props6.points,\n          isAnimationActive = _this$props6.isAnimationActive;\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n      var layerClass = classNames('recharts-radar', className);\n      return React.createElement(Layer, {\n        className: layerClass\n      }, this.renderPolygon(), (!isAnimationActive || isAnimationFinished) && LabelList.renderCallByParent(this.props, points));\n    }\n  }], [{\n    key: \"renderDotItem\",\n    value: function renderDotItem(option, props) {\n      var dotItem;\n\n      if (React.isValidElement(option)) {\n        dotItem = React.cloneElement(option, props);\n      } else if (_isFunction(option)) {\n        dotItem = option(props);\n      } else {\n        dotItem = React.createElement(Dot, _extends({}, props, {\n          className: \"recharts-radar-dot\"\n        }));\n      }\n\n      return dotItem;\n    }\n  }]);\n\n  return Radar;\n}(Component), _class2.displayName = 'Radar', _class2.propTypes = _objectSpread({}, PRESENTATION_ATTRIBUTES, {\n  className: PropTypes.string,\n  dataKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n  angleAxisId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  radiusAxisId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  points: PropTypes.arrayOf(PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n    cx: PropTypes.number,\n    cy: PropTypes.number,\n    angle: PropTypes.number,\n    radius: PropTypes.number,\n    value: PropTypes.number,\n    payload: PropTypes.object\n  })),\n  shape: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  activeDot: PropTypes.oneOfType([PropTypes.object, PropTypes.element, PropTypes.func, PropTypes.bool]),\n  // whether have dot in poly line\n  dot: PropTypes.oneOfType([PropTypes.object, PropTypes.element, PropTypes.func, PropTypes.bool]),\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.object, PropTypes.bool]),\n  legendType: PropTypes.oneOf(LEGEND_TYPES),\n  tooltipType: PropTypes.oneOf(TOOLTIP_TYPES),\n  hide: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onClick: PropTypes.func,\n  isAnimationActive: PropTypes.bool,\n  animationId: PropTypes.number,\n  animationBegin: PropTypes.number,\n  animationDuration: PropTypes.number,\n  animationEasing: PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])\n}), _class2.defaultProps = {\n  angleAxisId: 0,\n  radiusAxisId: 0,\n  hide: false,\n  activeDot: true,\n  dot: false,\n  legendType: 'rect',\n  isAnimationActive: !isSsr(),\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease'\n}, _class2.getComposedData = function (_ref2) {\n  var radiusAxis = _ref2.radiusAxis,\n      angleAxis = _ref2.angleAxis,\n      displayedData = _ref2.displayedData,\n      dataKey = _ref2.dataKey,\n      bandSize = _ref2.bandSize;\n  var cx = angleAxis.cx,\n      cy = angleAxis.cy;\n  var points = displayedData.map(function (entry, i) {\n    var name = getValueByDataKey(entry, angleAxis.dataKey, i);\n    var value = getValueByDataKey(entry, dataKey, 0);\n    var angle = angleAxis.scale(name) + (bandSize || 0);\n    var radius = radiusAxis.scale(value);\n    return _objectSpread({}, polarToCartesian(cx, cy, radius, angle), {\n      name: name,\n      value: value,\n      cx: cx,\n      cy: cy,\n      radius: radius,\n      angle: angle,\n      payload: entry\n    });\n  });\n  return {\n    points: points\n  };\n}, _temp)) || _class;\n\nexport default Radar;","map":null,"metadata":{},"sourceType":"module"}