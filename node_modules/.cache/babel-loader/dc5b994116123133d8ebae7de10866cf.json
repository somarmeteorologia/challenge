{"ast":null,"code":"var _jsxFileName = \"/home/marcos/www/challenge/src/components/Table/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatForecast } from '../../utils';\nimport { Container, HeadCell, HeadCellTitle, HeadCellSubtitle, Row, BodyCell, BodyCellContent, Bars, Bar } from './styles';\nexport default function Table({\n  data: {\n    date,\n    min,\n    max,\n    humidity\n  }\n}) {\n  function isActive(value) {\n    if (value <= 20) {\n      return 1;\n    }\n\n    if (value <= 40) {\n      return 2;\n    }\n\n    if (value <= 60) {\n      return 3;\n    }\n\n    if (value <= 80) {\n      return 4;\n    }\n\n    if (value <= 100) {\n      return 5;\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, date.map(item => React.createElement(HeadCell, {\n    key: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(HeadCellTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, item.split(' ').slice(0, 1).join('')), React.createElement(HeadCellSubtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, item.split(' ').slice(1, 3).join(' ')))))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, max.map((item, index) => React.createElement(BodyCell, {\n    key: \"\".concat(item, \"-\").concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(BodyCellContent, {\n    name: \"max\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, formatForecast(item, 'ºC'))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, min.map((item, index) => React.createElement(BodyCell, {\n    key: \"\".concat(item, \"-\").concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(BodyCellContent, {\n    name: \"min\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, formatForecast(item, 'ºC'))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, humidity.map((item, index) => React.createElement(BodyCell, {\n    key: \"\".concat(item, \"-\").concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(BodyCellContent, {\n    name: \"humidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Bars, {\n    active: isActive(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), formatForecast(item, '%')))))));\n}\nTable.propTypes = {\n  data: PropTypes.shape({\n    date: PropTypes.arrayOf(PropTypes.string),\n    min: PropTypes.arrayOf(PropTypes.number),\n    max: PropTypes.arrayOf(PropTypes.number),\n    humidity: PropTypes.arrayOf(PropTypes.number)\n  }).isRequired\n};","map":{"version":3,"sources":["/home/marcos/www/challenge/src/components/Table/index.js"],"names":["React","PropTypes","formatForecast","Container","HeadCell","HeadCellTitle","HeadCellSubtitle","Row","BodyCell","BodyCellContent","Bars","Bar","Table","data","date","min","max","humidity","isActive","value","map","item","split","slice","join","index","propTypes","shape","arrayOf","string","number","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { formatForecast } from '../../utils'\n\nimport {\n  Container,\n  HeadCell,\n  HeadCellTitle,\n  HeadCellSubtitle,\n  Row,\n  BodyCell,\n  BodyCellContent,\n  Bars,\n  Bar\n} from './styles'\n\nexport default function Table ({ data: { date, min, max, humidity } }) {\n  function isActive (value) {\n    if (value <= 20) {\n      return 1\n    }\n\n    if (value <= 40) {\n      return 2\n    }\n\n    if (value <= 60) {\n      return 3\n    }\n\n    if (value <= 80) {\n      return 4\n    }\n\n    if (value <= 100) {\n      return 5\n    }\n  }\n\n  return (\n    <Container>\n      <thead>\n        <tr>\n          {date.map(item => (\n            <HeadCell key={item}>\n              <HeadCellTitle>\n                {item\n                  .split(' ')\n                  .slice(0, 1)\n                  .join('')}\n              </HeadCellTitle>\n              <HeadCellSubtitle>\n                {item\n                  .split(' ')\n                  .slice(1, 3)\n                  .join(' ')}\n              </HeadCellSubtitle>\n            </HeadCell>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        <Row>\n          {max.map((item, index) => (\n            <BodyCell key={`${item}-${index}`}>\n              <BodyCellContent name='max'>\n                {formatForecast(item, 'ºC')}\n              </BodyCellContent>\n            </BodyCell>\n          ))}\n        </Row>\n\n        <Row>\n          {min.map((item, index) => (\n            <BodyCell key={`${item}-${index}`}>\n              <BodyCellContent name='min'>\n                {formatForecast(item, 'ºC')}\n              </BodyCellContent>\n            </BodyCell>\n          ))}\n        </Row>\n\n        <Row>\n          {humidity.map((item, index) => (\n            <BodyCell key={`${item}-${index}`}>\n              <BodyCellContent name='humidity'>\n                <Bars active={isActive(item)}>\n                  <Bar />\n                  <Bar />\n                  <Bar />\n                  <Bar />\n                  <Bar />\n                </Bars>\n                {formatForecast(item, '%')}\n              </BodyCellContent>\n            </BodyCell>\n          ))}\n        </Row>\n      </tbody>\n    </Container>\n  )\n}\n\nTable.propTypes = {\n  data: PropTypes.shape({\n    date: PropTypes.arrayOf(PropTypes.string),\n    min: PropTypes.arrayOf(PropTypes.number),\n    max: PropTypes.arrayOf(PropTypes.number),\n    humidity: PropTypes.arrayOf(PropTypes.number)\n  }).isRequired\n}\n"]},"metadata":{},"sourceType":"module"}